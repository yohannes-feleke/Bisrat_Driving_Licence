/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Homepage;

import Admin.admin_home_page;
import database.database;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GraphicsConfiguration;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.CaretListener;
import javax.swing.plaf.FontUIResource;

/**
 *
 * @author JOH
 */
public class home_page extends javax.swing.JFrame {

    boolean t = true;
    boolean f = false;
    int first = 0;
    int second = 1;
            
    //Accessign Database Objects
    database db = new database();
    String DBName = db.dbnm.getText();
    String DBUser = db.dbusr.getText();
    String DBPass = db.pass.getText();
    
    //Connection
    Connection con =null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    String s,g;
    String load;
    int x,r,e;
    int temp;
    
    public home_page() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.pack();
        jPanel3.setVisible(f);
        jScrollPane1.setVisible(f);
        hide.setVisible(f);
        count.setVisible(f);
        grade.setVisible(f);
        backarro.setVisible(f);
        jComboBox1.setVisible(f);
        jPanel10.setVisible(f);
        myresult.setVisible(f);
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
      
//        Toolkit t = Toolkit.getDefaultToolkit();
//        Dimension d = t.getScreenSize();
//        int h = d.height;
//        int w = d.width;
//        this.setSize( w , h );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup14 = new javax.swing.ButtonGroup();
        buttonGroup15 = new javax.swing.ButtonGroup();
        buttonGroup16 = new javax.swing.ButtonGroup();
        buttonGroup17 = new javax.swing.ButtonGroup();
        buttonGroup18 = new javax.swing.ButtonGroup();
        buttonGroup19 = new javax.swing.ButtonGroup();
        buttonGroup20 = new javax.swing.ButtonGroup();
        buttonGroup21 = new javax.swing.ButtonGroup();
        buttonGroup22 = new javax.swing.ButtonGroup();
        buttonGroup23 = new javax.swing.ButtonGroup();
        buttonGroup24 = new javax.swing.ButtonGroup();
        buttonGroup25 = new javax.swing.ButtonGroup();
        buttonGroup26 = new javax.swing.ButtonGroup();
        buttonGroup27 = new javax.swing.ButtonGroup();
        buttonGroup28 = new javax.swing.ButtonGroup();
        buttonGroup29 = new javax.swing.ButtonGroup();
        buttonGroup30 = new javax.swing.ButtonGroup();
        buttonGroup31 = new javax.swing.ButtonGroup();
        buttonGroup32 = new javax.swing.ButtonGroup();
        buttonGroup33 = new javax.swing.ButtonGroup();
        buttonGroup34 = new javax.swing.ButtonGroup();
        buttonGroup35 = new javax.swing.ButtonGroup();
        buttonGroup36 = new javax.swing.ButtonGroup();
        buttonGroup37 = new javax.swing.ButtonGroup();
        buttonGroup38 = new javax.swing.ButtonGroup();
        buttonGroup39 = new javax.swing.ButtonGroup();
        buttonGroup40 = new javax.swing.ButtonGroup();
        buttonGroup41 = new javax.swing.ButtonGroup();
        buttonGroup42 = new javax.swing.ButtonGroup();
        buttonGroup43 = new javax.swing.ButtonGroup();
        buttonGroup44 = new javax.swing.ButtonGroup();
        buttonGroup45 = new javax.swing.ButtonGroup();
        buttonGroup46 = new javax.swing.ButtonGroup();
        buttonGroup47 = new javax.swing.ButtonGroup();
        buttonGroup48 = new javax.swing.ButtonGroup();
        buttonGroup49 = new javax.swing.ButtonGroup();
        buttonGroup50 = new javax.swing.ButtonGroup();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        exams = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        adminbtn = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        t1 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        q1 = new javax.swing.JTextArea();
        c2 = new javax.swing.JRadioButton();
        c1 = new javax.swing.JRadioButton();
        c4 = new javax.swing.JRadioButton();
        c3 = new javax.swing.JRadioButton();
        myresult = new javax.swing.JButton();
        nextq = new javax.swing.JButton();
        quizimg = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hide = new javax.swing.JLabel();
        count = new javax.swing.JLabel();
        backarro = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        nm = new javax.swing.JTextField();
        pn = new javax.swing.JTextField();
        fnm = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tim = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        ID = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tim2 = new javax.swing.JLabel();
        tim3 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        TYP = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        grade = new javax.swing.JLabel();
        pp = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Homepage/shutdown_48px.png"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(1430, 0, 50, 80));

        jLabel21.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel21MouseDragged(evt);
            }
        });
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel21MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel21MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 1350, 80));

        jPanel10.setPreferredSize(new java.awt.Dimension(490, 82));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel10MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel10MouseExited(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(235, 228, 225));
        jButton1.setFont(new java.awt.Font("AbnetZeMelakt", 0, 14)); // NOI18N
        jButton1.setText("የሶፍት ዌሩን ባለበት ለመርዳት");
        jButton1.setFocusPainted(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(235, 228, 225));
        jButton2.setFont(new java.awt.Font("AbnetZeMelakt", 0, 14)); // NOI18N
        jButton2.setText("አጠቃቀሙ");
        jButton2.setFocusPainted(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(235, 228, 225));
        jButton3.setFont(new java.awt.Font("AbnetZeMelakt", 0, 14)); // NOI18N
        jButton3.setText("ስለኛ");
        jButton3.setFocusPainted(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(49, 49, 49))
        );

        getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 155, 740, 50));

        jPanel9.setBackground(new java.awt.Color(51, 51, 51));

        jLabel25.setBackground(new java.awt.Color(51, 51, 51));
        jLabel25.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(249, 128, 58));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("የፊት ገጽ");
        jLabel25.setOpaque(true);
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel25MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel25MouseExited(evt);
            }
        });

        exams.setBackground(new java.awt.Color(51, 51, 51));
        exams.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        exams.setForeground(new java.awt.Color(249, 128, 58));
        exams.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exams.setText("ፈተናዎች");
        exams.setMaximumSize(null);
        exams.setMinimumSize(null);
        exams.setOpaque(true);
        exams.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                examsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                examsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                examsMouseExited(evt);
            }
        });

        jLabel27.setBackground(new java.awt.Color(51, 51, 51));
        jLabel27.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(249, 128, 58));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("አስተማሪዎች");
        jLabel27.setMaximumSize(null);
        jLabel27.setMinimumSize(null);
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel27MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel27MouseExited(evt);
            }
        });

        adminbtn.setBackground(new java.awt.Color(51, 51, 51));
        adminbtn.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        adminbtn.setForeground(new java.awt.Color(249, 128, 58));
        adminbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminbtn.setText("ማስተዳደሪያ");
        adminbtn.setMaximumSize(null);
        adminbtn.setMinimumSize(null);
        adminbtn.setOpaque(true);
        adminbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminbtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                adminbtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                adminbtnMouseExited(evt);
            }
        });

        jLabel28.setBackground(new java.awt.Color(51, 51, 51));
        jLabel28.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(249, 128, 58));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("ስለ ድርጅቱ");
        jLabel28.setMaximumSize(null);
        jLabel28.setMinimumSize(null);
        jLabel28.setOpaque(true);
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel28MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel28MouseExited(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(51, 51, 51));
        jLabel29.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(249, 128, 58));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("እርዳታ");
        jLabel29.setOpaque(true);
        jLabel29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel29MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel29MouseExited(evt);
            }
        });

        jLabel30.setBackground(new java.awt.Color(51, 51, 51));
        jLabel30.setFont(new java.awt.Font("AbnetZeMelakt", 1, 20)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(249, 128, 58));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("መቆጣጠሪያ");
        jLabel30.setOpaque(true);
        jLabel30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel30MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel30MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel30MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(exams, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(adminbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exams, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adminbtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 85, 1480, 70));

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("© 2013/2021 Yohannes Feleke G.  All rights reserved");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 620, 310, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Homepage/home.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));

        t1.setBackground(new java.awt.Color(255, 230, 0));
        t1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        t1.setForeground(new java.awt.Color(255, 51, 51));
        t1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        t1.setText("1");
        t1.setToolTipText("");

        jLabel26.setBackground(new java.awt.Color(255, 230, 0));
        jLabel26.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 0, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("ተ.ቁ");
        jLabel26.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("ሀ");

        jLabel18.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 51, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("ለ");

        jLabel19.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 51, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("መ");

        jLabel20.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 51, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("ሐ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(t1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(39, 39, 39)
                .addComponent(jLabel19)
                .addGap(53, 53, 53))
        );

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.setBackground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        q1.setEditable(false);
        q1.setBackground(new java.awt.Color(0, 0, 0));
        q1.setColumns(20);
        q1.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        q1.setForeground(new java.awt.Color(255, 255, 255));
        q1.setLineWrap(true);
        q1.setRows(5);
        q1.setToolTipText("");
        q1.setBorder(null);
        q1.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(q1);

        jPanel7.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 730, 120));

        c2.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(c2);
        c2.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        c2.setForeground(new java.awt.Color(255, 255, 255));
        c2.setText("jRadioButton1");
        c2.setToolTipText("");
        c2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        c2.setFocusPainted(false);
        c2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        c2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        c2.setIconTextGap(15);
        c2.setOpaque(false);
        c2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                c2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                c2MouseExited(evt);
            }
        });
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });
        jPanel7.add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 990, -1));

        c1.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(c1);
        c1.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        c1.setForeground(new java.awt.Color(255, 255, 255));
        c1.setText("jRadioButton1");
        c1.setToolTipText("");
        c1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        c1.setFocusPainted(false);
        c1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        c1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        c1.setIconTextGap(15);
        c1.setOpaque(false);
        c1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                c1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                c1MouseExited(evt);
            }
        });
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });
        jPanel7.add(c1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 990, -1));

        c4.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(c4);
        c4.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        c4.setForeground(new java.awt.Color(255, 255, 255));
        c4.setText("jRadioButton1");
        c4.setToolTipText("");
        c4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        c4.setFocusPainted(false);
        c4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        c4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        c4.setIconTextGap(15);
        c4.setOpaque(false);
        c4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                c4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                c4MouseExited(evt);
            }
        });
        c4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c4ActionPerformed(evt);
            }
        });
        jPanel7.add(c4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 990, -1));

        c3.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(c3);
        c3.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        c3.setForeground(new java.awt.Color(255, 255, 255));
        c3.setText("jRadioButton1");
        c3.setToolTipText("");
        c3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        c3.setFocusPainted(false);
        c3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        c3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        c3.setIconTextGap(15);
        c3.setOpaque(false);
        c3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                c3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                c3MouseExited(evt);
            }
        });
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });
        jPanel7.add(c3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 990, -1));

        myresult.setBackground(new java.awt.Color(255, 230, 0));
        myresult.setFont(new java.awt.Font("AbnetZeMelakt", 1, 18)); // NOI18N
        myresult.setForeground(new java.awt.Color(255, 102, 47));
        myresult.setText("ውጤት");
        myresult.setToolTipText("");
        myresult.setFocusPainted(false);
        myresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myresultActionPerformed(evt);
            }
        });
        jPanel7.add(myresult, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, -1, -1));

        nextq.setBackground(new java.awt.Color(255, 230, 0));
        nextq.setFont(new java.awt.Font("AbnetZeMelakt", 1, 18)); // NOI18N
        nextq.setText("ቀጥል");
        nextq.setFocusPainted(false);
        nextq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextqMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextqMouseExited(evt);
            }
        });
        nextq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextqActionPerformed(evt);
            }
        });
        jPanel7.add(nextq, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 440, 80, 30));
        jPanel7.add(quizimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 0, 240, 200));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setOpaque(true);
        jPanel7.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 738, 3));

        jPanel8.setBackground(new java.awt.Color(116, 116, 116));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 237, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 36, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel4);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 1060, 490));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("AbnetZeMelakt", 0, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ብስራት የ አሽከርካሪዎች ማሰልጠኛ ተቋም");

        jLabel3.setFont(new java.awt.Font("AbnetZeMelakt", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        hide.setFont(new java.awt.Font("AbnetZeMelakt", 0, 13)); // NOI18N
        hide.setText("አውቶ");

        count.setText("0");

        backarro.setBackground(new java.awt.Color(255, 255, 255));
        backarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Homepage/left_round.png"))); // NOI18N
        backarro.setOpaque(true);
        backarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backarroMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backarroMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backarroMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(backarro)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(367, 367, 367)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(534, 534, 534)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(hide)
                        .addGap(42, 42, 42)
                        .addComponent(count)))
                .addContainerGap(479, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hide)
                            .addComponent(count))
                        .addGap(0, 4, Short.MAX_VALUE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(backarro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 70));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        nm.setBackground(new java.awt.Color(102, 102, 102));
        nm.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        nm.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        nm.setBorder(null);
        nm.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        nm.setEnabled(false);
        nm.setOpaque(false);

        pn.setBackground(new java.awt.Color(102, 102, 102));
        pn.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        pn.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        pn.setBorder(null);
        pn.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        pn.setEnabled(false);
        pn.setOpaque(false);

        fnm.setBackground(new java.awt.Color(102, 102, 102));
        fnm.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        fnm.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        fnm.setBorder(null);
        fnm.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        fnm.setEnabled(false);
        fnm.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("የ አባት ስም");

        jLabel7.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("ስም");

        jLabel8.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("ስልክ ቁጥር");

        jLabel4.setFont(new java.awt.Font("AbnetZeMelakt", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(195, 7, 63));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("የቀሮት ሰአት");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 0), 3, true));

        tim.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        tim.setForeground(new java.awt.Color(255, 51, 51));
        tim.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tim.setText("02");

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setOpaque(true);

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setOpaque(true);

        start.setBackground(new java.awt.Color(102, 102, 102));
        start.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        start.setForeground(new java.awt.Color(255, 255, 255));
        start.setText("ጀምር");
        start.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        start.setFocusPainted(false);
        start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                startMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                startMouseExited(evt);
            }
        });
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("መለያ ኮድ");

        ID.setBackground(new java.awt.Color(102, 102, 102));
        ID.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ID.setBorder(null);
        ID.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        ID.setOpaque(false);
        ID.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                IDCaretUpdate(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setOpaque(true);

        tim2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        tim2.setForeground(new java.awt.Color(255, 51, 51));
        tim2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tim2.setText("00");

        tim3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        tim3.setForeground(new java.awt.Color(255, 51, 51));
        tim3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tim3.setText(":");

        jLabel23.setFont(new java.awt.Font("AbnetZeMelakt", 0, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("አይነት");

        TYP.setBackground(new java.awt.Color(102, 102, 102));
        TYP.setFont(new java.awt.Font("AbnetZeMelakt", 1, 24)); // NOI18N
        TYP.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        TYP.setBorder(null);
        TYP.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        TYP.setEnabled(false);
        TYP.setOpaque(false);

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setOpaque(true);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tim)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tim3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tim2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fnm)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(nm)
                                    .addComponent(pn)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(142, 142, 142))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TYP)
                            .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nm, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fnm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TYP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tim, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tim2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tim3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 420, 580));

        jPanel5.setBackground(new java.awt.Color(102, 102, 255));

        jLabel12.setFont(new java.awt.Font("AbnetZeMelakt", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("1) ጥያቄውን ለማስጀመር መለያ ቁጥሮትን ያስገቡ ከዛ ጀምች ሚለውን ይጫኑ፡፡");

        jLabel13.setFont(new java.awt.Font("AbnetZeMelakt", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("2) ቀጥል ሚለውን በመጫን ሙሉ ጥያቄውን ይስሩ፡፡ ");

        jLabel14.setFont(new java.awt.Font("AbnetZeMelakt", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("3) ሲጨርሱ ውጤት ሚለውን ይጫኑ፡፡");

        grade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        grade.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        grade.setText("0");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(130, 130, 130)
                .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(pp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 1060, 90));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1480, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        
        try {
            con = DriverManager.getConnection(DBName,DBUser,DBPass); 
            load = "SELECT id FROM registration WHERE id=?";
            ps = con.prepareStatement(load);
            ps.setString(1, ID.getText());
            rs=ps.executeQuery();
            while(rs.next() && rs.getString("id").equals(ID.getText()))
            {    
            tim.setText("01");
            int size = 50;

            ArrayList<Integer> list = new ArrayList<Integer>(size);
            for(int i = 2; i <= size; i++) {
                list.add(i);
            }

            Random rand = new Random();
            while(list.size() > 0) {
                int index = rand.nextInt(list.size());
                String str3 = Integer.toString(list.remove(index));
                System.out.println(str3);
                jComboBox1.addItem(str3);

            }

            ID.setVisible(f);
            if(TYP.getText().equals("አውቶ ሞቢል"))
            {
                if(nm.getText().equals("")|| fnm.getText().equals("")|| pn.getText().equals(""))
                {
                    UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                    "AbnetZeMelakt", Font.BOLD, 20)));       
                    JOptionPane.showMessageDialog(null,"ያላስገቡት መረጃ አለ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE); 
                }
                else{
                jScrollPane1.setVisible(t);
                start.setEnabled(f);
                ID.setEnabled(f);
                pp.setVisible(t);

                // Puting Counter to jlabel
                x = Integer.parseInt(count.getText());
                x=x+1;
                count.setText(Integer.toString(x));

                Thread tr = new Thread ()
                {
                    int i;
                    int x;
                    int y;
                    public void run()
                    {
                        for(x=59;x>=0;x=x-1)
                        {
                            String y = Integer.toString(x);
                            tim2.setText(y);
                            try {
                                Thread.sleep(60000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            if(x==0)
                            {
                                i = Integer.parseInt(tim.getText())-1;
                                tim.setText(Integer.toString(i));
                                x=60;   
                            }

                            if(tim.getText().equals("0") && tim2.getText().equals("0"))
                            {
                                System.exit(0);
                            }
                        }
                    }
                };
                tr.start();

                //Validating Weather Exam taken or not
                try {
                            con = DriverManager.getConnection(DBName,DBUser,DBPass);
                            int s1; 
                            load = "SELECT taken FROM result WHERE id=?";
                            ps = con.prepareStatement(load);
                            ps.setString(1, ID.getText());
                            rs=ps.executeQuery();
                            while(rs.next() && rs.getString("taken").equals("T"))
                            { 
                               tim.setVisible(f);
                               tim2.setVisible(f);
                               tim3.setVisible(f);
                               jScrollPane1.setVisible(f);
                               UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                               "AbnetZeMelakt", Font.BOLD, 20)));       
                               JOptionPane.showMessageDialog(null,"ድጋሚ ለመፈተን ሚመለከተውን አካል ያናግሩ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE);
                            }
                            } catch (SQLException ex) {
                            Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                        }
                  //Inserting Data about Result To database
                  try {
                        String str;
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        str = "INSERT INTO result(id,firstname,lastname,phonenumber,type,taken) VALUES(?, ?, ?, ?, ?, ?)";
                        ps = con.prepareStatement(str);
                        ps.setString(1, ID.getText());
                        ps.setString(2, nm.getText());
                        ps.setString(3, fnm.getText());
                        ps.setString(4, pn.getText());
                        ps.setString(5, hide.getText());
                        ps.setString(6, "T");
                        ps.executeUpdate();
                  } catch (SQLException ex) {
                          Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                  }
                    if(hide.getText().equals("አውቶ"))
                    {
                        try {
                            con = DriverManager.getConnection(DBName,DBUser,DBPass);
                            int s1; 
                            String s2,s3,s4,s5,s6;
                            load = "SELECT * from auto";
                            ps = con.prepareStatement(load);
                            rs=ps.executeQuery();
                            while(rs.next() && rs.getString("no").equals("1"))
                            { 

                                s1 = rs.getByte(1);
                                s2 = rs.getString(2);
                                s3 = rs.getString(3);
                                s4 = rs.getString(4);
                                s5 = rs.getString(5);
                                s6 = rs.getString(6);

                                t1.setText(Integer.toString(s1));
                                q1.setText(s2);
                                c1.setText(s3);
                                c2.setText(s4);
                                c3.setText(s5);
                                c4.setText(s6);

                                byte[] imgbyt;
                                Image img;
                                imgbyt = rs.getBytes(7);
                                img = getToolkit().createImage(imgbyt);
                                Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                                ImageIcon icon = new ImageIcon(im);
                                quizimg.setIcon(icon);
                                    }
                            } catch (SQLException ex) {
                            System.out.print("gvygvgu");
                        }
                    }
                }
            }
            else if(TYP.getText().equals("ህዝብ 1"))
            {
                if(nm.getText().equals("")|| fnm.getText().equals("")|| pn.getText().equals(""))
                {
                    UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                    "AbnetZeMelakt", Font.BOLD, 20)));       
                    JOptionPane.showMessageDialog(null,"ያላስገቡት መረጃ አለ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE); 
                }
                else{
                jScrollPane1.setVisible(t);
                start.setEnabled(f);
                ID.setEnabled(f);
                pp.setVisible(t);

                // Puting Counter to jlabel
                x = Integer.parseInt(count.getText());
                x=x+1;
                count.setText(Integer.toString(x));

                Thread tr = new Thread ()
                {
                    int i;
                    int x;
                    int y;
                    public void run()
                    {
                        for(x=59;x>=0;x=x-1)
                        {
                            String y = Integer.toString(x);
                            tim2.setText(y);
                            try {
                                Thread.sleep(60000);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            if(x==0)
                            {
                                i = Integer.parseInt(tim.getText())-1;
                                tim.setText(Integer.toString(i));
                                x=60;   
                            }

                            if(tim.getText().equals("0") && tim2.getText().equals("0"))
                            {
                                System.exit(0);
                            }
                        }
                    }
                };
                tr.start();

                //Validating Weather Exam taken or not
                try {
                            con = DriverManager.getConnection(DBName,DBUser,DBPass);
                            int s1; 
                            load = "SELECT taken FROM result WHERE id=?";
                            ps = con.prepareStatement(load);
                            ps.setString(1, ID.getText());
                            rs=ps.executeQuery();
                            while(rs.next() && rs.getString("taken").equals("T"))
                            { 
                               tim.setVisible(f);
                               tim2.setVisible(f);
                               tim3.setVisible(f);
                               jScrollPane1.setVisible(f);
                               UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                               "AbnetZeMelakt", Font.BOLD, 20)));       
                               JOptionPane.showMessageDialog(null,"ድጋሚ ለመፈተን ሚመለከተውን አካል ያናግሩ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE);
                            }
                            } catch (SQLException ex) {
                            Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                        }
                  //Inserting Data about Result To database
                  try {
                        String str;
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        str = "INSERT INTO result(id,firstname,lastname,phonenumber,type,taken) VALUES(?, ?, ?, ?, ?, ?)";
                        ps = con.prepareStatement(str);
                        ps.setString(1, ID.getText());
                        ps.setString(2, nm.getText());
                        ps.setString(3, fnm.getText());
                        ps.setString(4, pn.getText());
                        ps.setString(5, hide.getText());
                        ps.setString(6, "T");
                        ps.executeUpdate();
                  } catch (SQLException ex) {
                          Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                  }
                    if(hide.getText().equals("አውቶ"))
                    {
                        try {
                            con = DriverManager.getConnection(DBName,DBUser,DBPass);
                            int s1; 
                            String s2,s3,s4,s5,s6;
                            load = "SELECT * from derek";
                            ps = con.prepareStatement(load);
                            rs=ps.executeQuery();
                            while(rs.next() && rs.getString("no").equals("1"))
                            { 

                                s1 = rs.getByte(1);
                                s2 = rs.getString(2);
                                s3 = rs.getString(3);
                                s4 = rs.getString(4);
                                s5 = rs.getString(5);
                                s6 = rs.getString(6);

                                t1.setText(Integer.toString(s1));
                                q1.setText(s2);
                                c1.setText(s3);
                                c2.setText(s4);
                                c3.setText(s5);
                                c4.setText(s6);

                                byte[] imgbyt;
                                Image img;
                                imgbyt = rs.getBytes(7);
                                img = getToolkit().createImage(imgbyt);
                                Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                                ImageIcon icon = new ImageIcon(im);
                                quizimg.setIcon(icon);
                                    }
                            } catch (SQLException ex) {
                            Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
            UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                "AbnetZeMelakt", Font.BOLD, 20)));       
                JOptionPane.showMessageDialog(null,"ያስገቡት መለያ ማህደር ውስጥ የለም","ችግር",JOptionPane.WARNING_MESSAGE);    
        } catch (SQLException ex) {
        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_startActionPerformed

    private void nextqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextqActionPerformed

        if(TYP.getText().equals("አውቶ ሞቢል"))
        {   
            if(c1.isSelected()==f && c2.isSelected()==f && c3.isSelected()==f && c4.isSelected()==f)
            {
                UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                "AbnetZeMelakt", Font.BOLD, 20)));       
                JOptionPane.showMessageDialog(null,"መልስ አልመረጡም! መልስ መርጠው ከሆነ ምጫዎቹ ቀለማቸው ይፈዛል","ችግር",JOptionPane.WARNING_MESSAGE);
            }
            else if(c1.isSelected()==t || c2.isSelected()==t || c3.isSelected()==t || c4.isSelected()==t)
            {
            //Visibling All Choices
            c1.setEnabled(t);
            c2.setEnabled(t);
            c3.setEnabled(t);
            c4.setEnabled(t);

            //Dselecting radio buttons
            buttonGroup1.clearSelection();

            //Incrementing Couuter For Changing the Number of Question
            x = Integer.parseInt(count.getText());
            x=x+1;
            count.setText(Integer.toString(x));
//            if(count.getText().equals("2"))
//            {
            if(count.getText().equals("2"))
            {    
               t1.setText(count.getText());
               jComboBox1.setSelectedIndex(0);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(0));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("3"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(1);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(1));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("4"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(2);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(2));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("5"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(3);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(3));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("6"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(4);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(4));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("7"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(5);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(5));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("8"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(6);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(6));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("9"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(7);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(7));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("10"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(8);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(8));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("11"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(9);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(9));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("12"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(10);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(10));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("13"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(11);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(11));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("14"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(12);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(12));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("15"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(13);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(13));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("16"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(14);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(14));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("17"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(15);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(15));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("18"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(16);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(16));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("19"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(17);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(17));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("20"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(18);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(18));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("21"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(19);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(19));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("22"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(20);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(20));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("23"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(21);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(21));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("24"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(22);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(22));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("25"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(23);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(23));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("26"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(24);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(24));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("27"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(25);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(25));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("28"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(26);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(26));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("29"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(27);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(27));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("30"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(28);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(28));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("31"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(29);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(29));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }else if(count.getText().equals("32"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(30);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(30));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("33"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(31);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(31));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("34"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(32);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(32));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("35"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(33);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(33));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("36"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(34);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(34));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("37"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(35);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(35));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("38"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(36);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(36));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("39"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(37);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(37));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("40"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(38);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(38));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("41"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(39);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(39));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("42"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(40);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(40));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("43"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(41);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(41));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("44"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(42);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(42));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("45"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(43);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(43));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("46"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(44);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(44));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("47"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(45);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(45));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("48"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(46);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(46));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("49"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(47);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(47));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("50"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(48);
                myresult.setVisible(t);
                nextq.setVisible(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from auto WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(48));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        else if(TYP.getText().equals("ህዝብ 1"))
        {
            if(c1.isSelected()==f && c2.isSelected()==f && c3.isSelected()==f && c4.isSelected()==f)
            {
                UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                "AbnetZeMelakt", Font.BOLD, 20)));       
                JOptionPane.showMessageDialog(null,"መልስ አልመረጡም! መልስ መርጠው ከሆነ ምጫዎቹ ቀለማቸው ይፈዛል","ችግር",JOptionPane.WARNING_MESSAGE);
            }
            else
            {
            //Visibling All Choices
            c1.setEnabled(t);
            c2.setEnabled(t);
            c3.setEnabled(t);
            c4.setEnabled(t);

            //Dselecting radio buttons
            buttonGroup1.clearSelection();

            //Incrementing Couuter For Changing the Number of Question
            x = Integer.parseInt(count.getText());
            x=x+1;
            count.setText(Integer.toString(x));
//            if(count.getText().equals("2"))
//            {
            if(count.getText().equals("2"))
            {    
               t1.setText(count.getText());
               jComboBox1.setSelectedIndex(0);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(0));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("3"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(1);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(1));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("4"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(2);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(2));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("5"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(3);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(3));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("6"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(4);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(4));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("7"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(5);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(5));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("8"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(6);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(6));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("9"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(7);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(7));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("10"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(8);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(8));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("11"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(9);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(9));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("12"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(10);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(10));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("13"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(11);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(11));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("14"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(12);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(12));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("15"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(13);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(13));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("16"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(14);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(14));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("17"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(15);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(15));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("18"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(16);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(16));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("19"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(17);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(17));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("20"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(18);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(18));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("21"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(19);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(19));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("22"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(20);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(20));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("23"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(21);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(21));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("24"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(22);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(22));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("25"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(23);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(23));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("26"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(24);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(24));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("27"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(25);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(25));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("28"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(26);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(26));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("29"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(27);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(27));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("30"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(28);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(28));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("31"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(29);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(29));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }else if(count.getText().equals("32"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(30);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(30));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("33"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(31);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(31));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("34"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(32);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(32));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("35"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(33);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(33));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("36"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(34);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(34));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("37"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(35);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(35));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("38"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(36);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(36));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("39"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(37);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(37));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("40"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(38);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(38));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("41"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(39);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(39));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("42"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(40);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(40));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("43"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(41);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(41));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("44"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(42);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(42));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("45"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(43);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(43));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("46"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(44);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(44));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("47"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(45);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(45));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("48"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(46);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(46));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("49"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(47);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(47));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else if(count.getText().equals("50"))
            {
                t1.setText(count.getText());
                jComboBox1.setSelectedIndex(48);
                myresult.setVisible(t);
                nextq.setVisible(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        String s2,s3,s4,s5,s6;
                        load = "SELECT no,question,cho,cht,chth,chf,qimg from derek WHERE no=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getItemAt(48));
                        rs=ps.executeQuery();
                        while(rs.next())
                        { 

                            s1 = rs.getByte(1);
                            s2 = rs.getString(2);
                            s3 = rs.getString(3);
                            s4 = rs.getString(4);
                            s5 = rs.getString(5);
                            s6 = rs.getString(6);

//                            t1.setText(Integer.toString(s1));
                            q1.setText(s2);
                            c1.setText(s3);
                            c2.setText(s4);
                            c3.setText(s5);
                            c4.setText(s6);

                            byte[] imgbyt;
                            Image img;
                            imgbyt = rs.getBytes(7);
                            img = getToolkit().createImage(imgbyt);
                            Image im = img.getScaledInstance(quizimg.getWidth(), quizimg.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon icon = new ImageIcon(im);
                            quizimg.setIcon(icon);
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_nextqActionPerformed

    private void myresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myresultActionPerformed
        myresult.setEnabled(f);
        if(c1.isSelected()==f && c2.isSelected()==f && c3.isSelected()==f && c4.isSelected()==f)
        {
            UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
            "AbnetZeMelakt", Font.BOLD, 20)));       
            JOptionPane.showMessageDialog(null,"መልስ አልመረጡም! መልስ መርጠው ከሆነ ምጫዎቹ ቀለማቸው ይፈዛል","ችግር",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            try {
                    String str;
                    con = DriverManager.getConnection(DBName,DBUser,DBPass);
                    str = "UPDATE result set grade=?,passfail=? WHERE id=?";
                    ps = con.prepareStatement(str);
                    int z = Integer.parseInt(grade.getText())*2;
                    String gradeString = Integer.toString(z);
                    ps.setString(1, gradeString);
                    if(z<=73 && z>=0)
                    {
                        ps.setString(2, "F");
                    }
                    else if(z>=74 && z<=100)
                    {
                        ps.setString(2, "P");   
                    }
                    ps.setString(3, ID.getText());
                    ps.executeUpdate();
                    
                    if(z<=73 && z>=0)
                    {
                        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                        "AbnetZeMelakt", Font.BOLD, 20)));       
                        JOptionPane.showMessageDialog(null,"እናዝናለን ያመጡት ውጤት "+ z +" ከማለፊያ ነጥብ በታች ስለሆነ አላለፉም ድጋሚ ለመፈተን ሚመለከተውን አካል ያናግሩ።","መልእክት",JOptionPane.WARNING_MESSAGE); 
                    }
                    else if(z>=74 && z<=100)
                    {
                        UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                        "AbnetZeMelakt", Font.BOLD, 20)));       
                        JOptionPane.showMessageDialog(null,"እንኳን ደስ አሎት! "+ z +" ነጥብ በማምጣት አልፈዋል።","መልእክት",JOptionPane.WARNING_MESSAGE);  
                    }
              } catch (SQLException ex) {
                      Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
            }
        } 
    }//GEN-LAST:event_myresultActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        if(TYP.getText().equals("አውቶ ሞቢል"))
        {    
            if(c1.isSelected()==t)
            {
                c1.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);

                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        load = "SELECT answer FROM soln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c1.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else {
                UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                "AbnetZeMelakt", Font.BOLD, 20)));       
                JOptionPane.showMessageDialog(null,"መልሶትን ይምረጡ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE); 
            }
        }
        else if(TYP.getText().equals("ህዝብ 1"))
        {
            if(c1.isSelected()==t)
            {
                c1.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);

                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 
                        load = "SELECT answer FROM dereksoln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c1.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
            else {
                UIManager.put("OptionPane.messageFont", new FontUIResource(new Font(  
                "AbnetZeMelakt", Font.BOLD, 20)));       
                JOptionPane.showMessageDialog(null,"መልሶትን ይምረጡ","ችግር ተፈጥሯል",JOptionPane.WARNING_MESSAGE); 
            }
        }
        
    }//GEN-LAST:event_c1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        if(TYP.getText().equals("አውቶ ሞቢል"))
        {    
            if(c2.isSelected()==t)
            {
                c2.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from soln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c2.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        else if(TYP.getText().equals("ህዝብ 1"))
        {
            if(c2.isSelected()==t)
            {
                c2.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from dereksoln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c2.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        
    }//GEN-LAST:event_c2ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        if(TYP.getText().equals("አውቶ ሞቢል"))
        {     
            if(c3.isSelected()==t)
            {
                c3.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from soln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c3.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        else if(TYP.getText().equals("ህዝብ 1"))
        {
            if(c3.isSelected()==t)
            {
                c3.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from dereksoln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c3.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        
    }//GEN-LAST:event_c3ActionPerformed

    private void c4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c4ActionPerformed
        if(TYP.getText().equals("አውቶ ሞቢል"))
        {     
            if(c4.isSelected()==t)
            {
                c4.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from soln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c4.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        else if(TYP.getText().equals("ህዝብ 1"))
        {
            if(c4.isSelected()==t)
            {
                c4.setBackground(Color.GREEN);
                c1.setEnabled(f);
                c2.setEnabled(f);
                c3.setEnabled(f);
                c4.setEnabled(f);
                try {
                        con = DriverManager.getConnection(DBName,DBUser,DBPass);
                        int s1; 

                        load = "SELECT answer from dereksoln WHERE qnum=?";
                        ps = con.prepareStatement(load);
                        ps.setString(1, jComboBox1.getSelectedItem().toString());
                        rs=ps.executeQuery();
                        while(rs.next() && rs.getString("answer").equals(c4.getText()))
                        { 
                           s1 = Integer.parseInt(grade.getText());
                           s1+=1;
                           grade.setText(Integer.toString(s1));
                        }
                        } catch (SQLException ex) {
                        Logger.getLogger(home_page.class.getName()).log(Level.SEVERE, null, ex);
                    }
            }
        }
        
    }//GEN-LAST:event_c4ActionPerformed

    private void adminbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminbtnMouseClicked
        login lg = new login();
        lg.getobj().setVisible(t);
        
    }//GEN-LAST:event_adminbtnMouseClicked

    private void IDCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_IDCaretUpdate
 
            try {
                //Validate Employee ID correct or not
                load = "SELECT id FROM registration WHERE id=?";
                con = DriverManager.getConnection(DBName,DBUser,DBPass);
                ps = con.prepareStatement(load);
                ps.setString(1, ID.getText());
                rs = ps.executeQuery();
                if(rs.next() && rs.getString("id").equals(ID.getText()))
                {
                    //connection
                    con = DriverManager.getConnection(DBName,DBUser,DBPass);
                    String s1,s2,s3,s4;
                    String load = "SELECT Name,fathername,phoneno,Type,personphoto from registration WHERE id=?";
                    ps = con.prepareStatement(load);
                    ps.setString(1, ID.getText());
                    rs=ps.executeQuery();
                    while(rs.next())
                    {
                        s1 = rs.getString(1);
                        s2 = rs.getString(2);
                        s3 = rs.getString(3);
                        s4 = rs.getString(4);
                        nm.setText(s1);
                        fnm.setText(s2);
                        pn.setText(s3);
                        TYP.setText(s4);
                        
                        byte[] imgbyt;
                        Image img;
                        imgbyt = rs.getBytes(5);
                        img = getToolkit().createImage(imgbyt);
                        Image im = img.getScaledInstance(pp.getWidth(), pp.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon icon = new ImageIcon(im);
                        pp.setIcon(icon);
                        
                        jLabel3.setText("የ "+TYP.getText()+" ፈተና");
                    }
                }
                } catch (SQLException ex) {
                
            }
    q1.setText("");
    c1.setText("");
    c2.setText("");
    c3.setText("");
    c4.setText("");
    grade.setText("0");
    myresult.setVisible(f);
    
    }//GEN-LAST:event_IDCaretUpdate

    private void c4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4MouseEntered
        c4.setForeground(Color.red);
    }//GEN-LAST:event_c4MouseEntered

    private void c3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3MouseEntered
       c3.setForeground(Color.red);
    }//GEN-LAST:event_c3MouseEntered

    private void c2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2MouseEntered
        c2.setForeground(Color.red);
    }//GEN-LAST:event_c2MouseEntered

    private void c1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseEntered
        c1.setForeground(Color.red);
    }//GEN-LAST:event_c1MouseEntered

    private void c1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1MouseExited
        c1.setForeground(Color.white);
    }//GEN-LAST:event_c1MouseExited

    private void c2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2MouseExited
        c2.setForeground(Color.white);
    }//GEN-LAST:event_c2MouseExited

    private void c3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3MouseExited
        c3.setForeground(Color.white);
    }//GEN-LAST:event_c3MouseExited

    private void c4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4MouseExited
        c4.setForeground(Color.white);
    }//GEN-LAST:event_c4MouseExited

    private void nextqMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextqMouseEntered
        nextq.setBackground(new Color(255,51,51));
    }//GEN-LAST:event_nextqMouseEntered

    private void nextqMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextqMouseExited
        nextq.setBackground(new Color(255,230,0));
    }//GEN-LAST:event_nextqMouseExited

    private void startMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseEntered
        start.setBackground(new Color(0,0,0));
    }//GEN-LAST:event_startMouseEntered

    private void startMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startMouseExited
        start.setBackground(new Color(102,102,102));
    }//GEN-LAST:event_startMouseExited

    private void jLabel21MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MousePressed
        r = evt.getX();
        e = evt.getY();
        this.setOpacity((float) 0.8);
    }//GEN-LAST:event_jLabel21MousePressed

    private void jLabel21MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseDragged
        int xx,yy;
        
        xx = evt.getXOnScreen();
        yy = evt.getYOnScreen();
        this.setLocation(xx-r,yy-e);
    }//GEN-LAST:event_jLabel21MouseDragged

    private void jLabel21MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseReleased
        this.setOpacity(1);
    }//GEN-LAST:event_jLabel21MouseReleased

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel22MouseClicked

    private void backarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backarroMouseClicked
        jPanel3.setVisible(f);
        jPanel2.setVisible(f);
        jLabel1.setVisible(t);
        jPanel9.setVisible(t);
        exams.setVisible(t);  
        jLabel22.setVisible(t);
        jLabel31.setVisible(t);
        ID.setVisible(t);
        
        c1.setEnabled(t);
        c2.setEnabled(t);
        c3.setEnabled(t);
        c4.setEnabled(t);
        
        c1.setSelected(f);
        c2.setSelected(f);
        c3.setSelected(f);
        c4.setSelected(f);
        
        nextq.setVisible(t);
        count.setText("0");
        
        ID.setEditable(t);
        ID.setEnabled(t);
        start.setEnabled(t);
        
        
    }//GEN-LAST:event_backarroMouseClicked

    private void examsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examsMouseClicked
        jPanel3.setVisible(t);
        jLabel31.setVisible(f);
        jPanel2.setVisible(t);
        jPanel9.setVisible(f);
        jLabel1.setVisible(f);
        jLabel22.setVisible(f);
        exams.setVisible(f);
        backarro.setVisible(t);
    }//GEN-LAST:event_examsMouseClicked

    private void jLabel25MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseEntered
       jLabel25.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_jLabel25MouseEntered

    private void jLabel25MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseExited
         jLabel25.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_jLabel25MouseExited

    private void examsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examsMouseEntered
        exams.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_examsMouseEntered

    private void examsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_examsMouseExited
         exams.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_examsMouseExited

    private void jLabel27MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseEntered
        jLabel27.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_jLabel27MouseEntered

    private void jLabel27MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseExited
         jLabel27.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_jLabel27MouseExited

    private void adminbtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminbtnMouseEntered
        adminbtn.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_adminbtnMouseEntered

    private void adminbtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_adminbtnMouseExited
         adminbtn.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_adminbtnMouseExited

    private void jLabel28MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseEntered
        jLabel28.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_jLabel28MouseEntered

    private void jLabel28MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseExited
         jLabel28.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_jLabel28MouseExited

    private void jLabel29MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseEntered
        jLabel29.setForeground(new Color(235, 228, 225));
        jLabel29.setBackground(new Color(51,51,51));
        jPanel10.setBackground(new Color(51,51,51));
        jPanel10.setVisible(t);
    }//GEN-LAST:event_jLabel29MouseEntered

    private void jLabel29MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel29MouseExited
         jLabel29.setForeground(new Color(249, 128, 58));
         jLabel29.setBackground(new Color(51,51,51));
          jPanel10.setVisible(f);
    }//GEN-LAST:event_jLabel29MouseExited

    private void jLabel30MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseEntered
       jLabel30.setForeground(new Color(235, 228, 225));
    }//GEN-LAST:event_jLabel30MouseEntered

    private void jLabel30MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseExited
         jLabel30.setForeground(new Color(249, 128, 58 ));
    }//GEN-LAST:event_jLabel30MouseExited

    private void backarroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backarroMouseEntered
        backarro.setBackground(new Color(29, 192, 249)); 
    }//GEN-LAST:event_backarroMouseEntered

    private void backarroMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backarroMouseExited
        backarro.setBackground(new Color(255, 255, 255)); 
    }//GEN-LAST:event_backarroMouseExited

    private void jLabel30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel30MouseClicked
        db_admin_login dbs = new db_admin_login();
        dbs.getobj().setVisible(t);
    }//GEN-LAST:event_jLabel30MouseClicked

    private void jPanel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseEntered
        jPanel10.setVisible(t);
        jLabel29.setBackground(new Color(51,51,51));
        jPanel10.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_jPanel10MouseEntered

    private void jPanel10MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseExited
        jPanel10.setVisible(f);
        jLabel29.setBackground(new Color(51,51,51));
    }//GEN-LAST:event_jPanel10MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        jPanel10.setVisible(t);
        jButton1.setBackground(new Color(206, 139, 10));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        jPanel10.setVisible(t);
        jButton2.setBackground(new Color(206, 139, 10));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        jPanel10.setVisible(t);
        jButton3.setBackground(new Color(206, 139, 10));
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        jButton1.setBackground(new Color(235, 228, 225));
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        jButton3.setBackground(new Color(235, 228, 225));
    }//GEN-LAST:event_jButton3MouseExited

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        jButton2.setBackground(new Color(235, 228, 225));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        about abt = new about();
        abt.getobj().setVisible(t);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
       displat_teach_info dispi = new displat_teach_info();
       dispi.getobj().setVisible(t);
       
    }//GEN-LAST:event_jLabel27MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home_page.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home_page().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID;
    private javax.swing.JTextField TYP;
    private javax.swing.JLabel adminbtn;
    private javax.swing.JLabel backarro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup14;
    private javax.swing.ButtonGroup buttonGroup15;
    private javax.swing.ButtonGroup buttonGroup16;
    private javax.swing.ButtonGroup buttonGroup17;
    private javax.swing.ButtonGroup buttonGroup18;
    private javax.swing.ButtonGroup buttonGroup19;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup20;
    private javax.swing.ButtonGroup buttonGroup21;
    private javax.swing.ButtonGroup buttonGroup22;
    private javax.swing.ButtonGroup buttonGroup23;
    private javax.swing.ButtonGroup buttonGroup24;
    private javax.swing.ButtonGroup buttonGroup25;
    private javax.swing.ButtonGroup buttonGroup26;
    private javax.swing.ButtonGroup buttonGroup27;
    private javax.swing.ButtonGroup buttonGroup28;
    private javax.swing.ButtonGroup buttonGroup29;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup30;
    private javax.swing.ButtonGroup buttonGroup31;
    private javax.swing.ButtonGroup buttonGroup32;
    private javax.swing.ButtonGroup buttonGroup33;
    private javax.swing.ButtonGroup buttonGroup34;
    private javax.swing.ButtonGroup buttonGroup35;
    private javax.swing.ButtonGroup buttonGroup36;
    private javax.swing.ButtonGroup buttonGroup37;
    private javax.swing.ButtonGroup buttonGroup38;
    private javax.swing.ButtonGroup buttonGroup39;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup40;
    private javax.swing.ButtonGroup buttonGroup41;
    private javax.swing.ButtonGroup buttonGroup42;
    private javax.swing.ButtonGroup buttonGroup43;
    private javax.swing.ButtonGroup buttonGroup44;
    private javax.swing.ButtonGroup buttonGroup45;
    private javax.swing.ButtonGroup buttonGroup46;
    private javax.swing.ButtonGroup buttonGroup47;
    private javax.swing.ButtonGroup buttonGroup48;
    private javax.swing.ButtonGroup buttonGroup49;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup50;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JRadioButton c1;
    private javax.swing.JRadioButton c2;
    private javax.swing.JRadioButton c3;
    private javax.swing.JRadioButton c4;
    private javax.swing.JLabel count;
    private javax.swing.JLabel exams;
    private javax.swing.JTextField fnm;
    public javax.swing.JLabel grade;
    private javax.swing.JLabel hide;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton myresult;
    private javax.swing.JButton nextq;
    private javax.swing.JTextField nm;
    private javax.swing.JTextField pn;
    private javax.swing.JLabel pp;
    private javax.swing.JTextArea q1;
    private javax.swing.JLabel quizimg;
    public javax.swing.JButton start;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel tim;
    private javax.swing.JLabel tim2;
    private javax.swing.JLabel tim3;
    // End of variables declaration//GEN-END:variables
}
